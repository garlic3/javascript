/* 
    스코프(scope) : 식별자 자신을 참조할수 있는 유효범위
    모든 식별자는 자신이 선언된 위치에 의해 스코프(식별자 자신을 참조할수 있는 유효범위)가 결정된다

    1. var로 선언된 변수는 같은 스코프 내에서 중복 선언이 허용되지만 2번째 선언문이 할당으로 사용되게 된다
    2. 전역 스코프 : 코드의 가장 바깥 영역. 전역변수. 어디서든지 참조 가능
       지역 스코프 : 함수 내부. 지역변수. 자신의 지역 스코프와 하위 지역 스코프에서 유효
    
    스코프 체인 : 스코프가 계층적으로 연결된것
    1. 스코프 체인을 통해 하위 스코프 -> 상위 스코프로 이동하며 변수를 검색한다
    2. 하위 스코프에서 유효한 변수는 상위 스코프에서 참조 불가

*/

// ex13-07
// 함수 레벨 스코프 : var로 선언된 변수는 함수 내부만을 지역 스코프로 인정한다 
var x = 1;
if(true){
    var x = 10; // 전역변수 중복선언
}

/* 
    1. 동적 스코프 : 함수를 어디서 호출했는지에 따라 함수의 상위 스코프를 결정
    2. 렉시컬 스코프 : 함수를 어디서 정의했는지에 따라 함수의 상위 스코프를 결정
*/

// ex13-09
var a = 1;
function foo(){
    var x = 10;
    bar();
}

function bar(){
    console.log(x);
}

foo(); // 1
bar(); // 1. 함수의 상위 스코프는 함수가 정의된곳 